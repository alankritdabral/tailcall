name: Comment Criterion

on:
  pull_request:
    types: [opened, synchronize, labeled]
    branches:
      - main

jobs:
  Micro-benchmarks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Critcmp
        run: cargo install critcmp

      - name: Benchmark changes
        run: |
          cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline new_branch
          cargo bench --bench data_loader_bench -- --save-baseline new_branch
          cargo bench --bench request_template_bench -- --save-baseline new_branch
          cargo bench --bench json_like_bench -- --save-baseline new_branch

      - name: Fetch base branch
        run: git fetch

      - name: Checkout base branch
        run: git checkout ${{ github.base_ref }}

      - name: Benchmark base
        run: |
          cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline main_branch
          cargo bench --bench data_loader_bench -- --save-baseline main_branch
          cargo bench --bench request_template_bench -- --save-baseline main_branch
          cargo bench --bench json_like_bench -- --save-baseline main_branch

      - name: Run shell script
        run: |
          critcmp main_branch new_branch | awk 'NR>2 {
           item = $1
           before = $7
           after = $3
           before_val = ($7 ~ /ns/) ? $7 : ($7 ~ /µs/) ? $7 * 1000 : ($7 ~ /ms/) ? $7 * 1000000 : "invalid"
           after_val = ($3 ~ /ns/) ? $3 : ($3 ~ /µs/) ? $3 * 1000 : ($3 ~ /ms/) ? $3 * 1000000 : "invalid"
           temp1 = before_val
           temp2 = after_val
           if (before_val != "invalid" && after_val != "invalid") {
               change = ((after_val - before_val) / before_val) * 100
               gsub("%", "", change)  # Remove '%' symbol
               printf "| %-30s | %-20s | %-20s | %-10.2f |\n", item, before, after, change >> "output_file.txt"
               if (change > 10) {
                   echo "Percentage change exceeds 10%. Failing the workflow."
                   exit 1
               }
           }
           else {
               echo "Invalid units detected for %s. Failing the workflow."
               exit 1
           }
          }'

      - name: Debug Info
        run: |
          echo "Owner: ${{ github.repository_owner }}"
          echo "Repo: ${{ github.repository }}"
          echo "Issue Number: ${{ github.event.number }}"

      - name: Comment PR
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const fileContent = fs.readFileSync('output_file.txt', 'utf8');
            const issue_number = context.issue.number;
            const comment = `
            <details>
            <summary>Benchmark Results</summary>

            | Test                          | Base         | PR               | % change   |
            |-------------------------------|--------------|------------------|------------|
            ${fileContent}

            </details>
            `;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: comment
            });
  iai-callgrind:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install iai-callgrind-runner
        run: cargo install --version 0.7.3 iai-callgrind-runner

      - name: Install Valgrind
        run: sudo apt-get update && sudo apt-get install valgrind

      - name: Benchmark changes
        run: |
          echo -n > benches/iai-callgrind/benchmarks.txt
          cargo bench --bench json_like_bench_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt
          cargo bench --bench data_loader_bench_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt
          cargo bench --bench impl_path_string_for_evaluation_context_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt
          cargo bench --bench request_template_bench_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt
          sed -i 's/ \{1,\}\([0-9]\)/\1/g' benches/iai-callgrind/benchmarks.txt
      - name: Fetch base branch
        run: git fetch

      - name: Checkout base branch
        run: git checkout ${{ github.base_ref }}

      - name: Benchmark base
        run: |
          echo -n > benches/iai-callgrind/benchmark.txt
          cargo bench --bench json_like_bench_iai-callgrind -- --save-baseline main >> benches/iai-callgrind/benchmark.txt
          cargo bench --bench data_loader_bench_iai-callgrind -- --save-baseline main >> benches/iai-callgrind/benchmark.txt
          cargo bench --bench impl_path_string_for_evaluation_context_iai-callgrind -- --save-baseline main >> benches/iai-callgrind/benchmark.txt
          cargo bench --bench request_template_bench_iai-callgrind -- --save-baseline main >> benches/iai-callgrind/benchmark.txt
          sed -i 's/ \{1,\}\([0-9]\)/\1/g' benches/iai-callgrind/benchmark.txt

      - name: Execute build_time_compare.sh
        run: |
          chmod +x .github/scripts/compare_build_time.sh
          bash .github/scripts/compare_build_time.sh
