name: Micro benchmarks

on:
  pull_request:
    types: [opened, synchronize, labeled]
    branches:
      - main
  push:
    branches:
      - "**"
jobs:
 Check_Degdratation:
    name: Criterion Benchmarks
    if: contains(github.event.pull_request.labels.*.name, 'benchmark') || contains(github.event.head_commit.message, 'benchmark')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Critcmp
        run: cargo install critcmp 

      - name: Benchmark changes
        run: |
          cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline new_branch
          cargo bench --bench data_loader_bench -- --save-baseline new_branch
          cargo bench --bench request_template_bench -- --save-baseline new_branch
          cargo bench --bench json_like_bench -- --save-baseline new_branch

      - name: Fetch base branch
        run: git fetch

      - name: Checkout base branch
        run: git checkout ${{ github.base_ref }}

      - name: Benchmark base
        run: |
          cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline main_branch
          cargo bench --bench data_loader_bench -- --save-baseline main_branch
          cargo bench --bench request_template_bench -- --save-baseline main_branch
          cargo bench --bench json_like_bench -- --save-baseline main_branch

      - name: Run shell script
        run: |
          critcmp main_branch new_branch
          chmod +x .github/scripts/check_degradation.sh
          bash .github/scripts/check_degradation.sh
  
      - name: Comment on Commit
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              const { owner, repo, sha } = context.repo;        
              const fs = require('fs');
              const path = require('path');
              const filePath = path.join(process.env.GITHUB_WORKSPACE, 'output_file.txt');
              const fileContent = fs.readFileSync(filePath, 'utf8');
              const comment = await github.rest.repos.createCommitComment({
              owner,
              repo,
              sha,
              body: fileContent
              });
          github: ${{ github }}

 Build_time_compare:
    if: contains(github.event.pull_request.labels.*.name, 'benchmark') || contains(github.event.head_commit.message, 'benchmark')
    name: iai_callgrind_benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code from the repository
        uses: actions/checkout@v2

      - name: Install iai-callgrind-runner
        run: cargo install --version 0.7.3 iai-callgrind-runner

      - name: Install Valgrind
        run: sudo apt-get update && sudo apt-get install valgrind

      - name: Execute build_time_compare.sh
        run: |
          chmod +x .github/scripts/compare_build_time.sh
          bash .github/scripts/compare_build_time.sh
