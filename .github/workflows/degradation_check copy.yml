name: Helo

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]
  release:
    types: [published]

jobs:
  BenchmarkRunner:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Helo
        if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'release' && github.event.action == 'published') }}
        uses: boa-dev/criterion-compare-action@v3.2.4
        run: |
           json_like_bench --default-features=false --branch-name=${{ github.base_ref }} --token=${{ secrets.GITHUB_TOKEN }}

           impl_path_string_for_evaluation_context --default-features=false --branch-name=${{ github.base_ref }} --token=${{ secrets.GITHUB_TOKEN }}

           data_loader_bench --default-features=false --branch-name=${{ github.base_ref }} --token=${{ secrets.GITHUB_TOKEN }}

           request_template_bench --default-features=false --branch-name=${{ github.base_ref }} --token=${{ secrets.GITHUB_TOKEN }}

  BenchmarkAnalyzer:
    needs: BenchmarkRunner
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Analyze benchmark percentage differences and comment on PR
        if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'release' && github.event.action == 'published') }}
        run: |
          # Run the critcmp command and capture its output
          output=$(/home/runner/.cargo/bin/critcmp base changes)

          # Print the captured output
          echo "$output"

          # Use awk to calculate percentage differences and comment on the PR if the difference is more than 10%
          awk 'NR > 2 {
              group=$1
              base=$7
              changes=$3

              gsub(/[^\-0-9\.]/, "", changes)  # Extract only numerical values
              gsub(/[^\-0-9\.]/, "", base)     # Extract only numerical values

              # Ensure changes and base values are not empty
              if (changes != "" && base != "") {
                  diff = changes - base  # Calculate the absolute difference
                  percentage = (diff / base) * 100  # Calculate the percentage difference

                  if (percentage > 10) {
                      comment="Percentage change for %s exceeds 10%%: %.2f%%\n", group, percentage
                      echo "$comment"
                      # Add logic to comment on the pull request using GitHub API or a suitable GitHub Action
                  }
              }
          }' <<< "$output"
