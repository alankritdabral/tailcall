name: Comment Criterion

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]
  release:
    types: [published]

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Critcmp
      run: cargo install critcmp

    - name: Benchmark changes
      run: |
        cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline new_branch
        cargo bench --bench data_loader_bench -- --save-baseline new_branch
        cargo bench --bench request_template_bench -- --save-baseline new_branch
        cargo bench --bench json_like_bench -- --save-baseline new_branch

    - name: Fetch base branch
      run: git fetch

    - name: Checkout base branch
      run: git checkout ${{ github.base_ref }}

    - name: Benchmark base
      run: |
        cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline main_branch
        cargo bench --bench data_loader_bench -- --save-baseline main_branch
        cargo bench --bench request_template_bench -- --save-baseline main_branch
        cargo bench --bench json_like_bench -- --save-baseline main_branch

    - name: Check Benchmark Changes
      run: |
          # Run the critcmp command and capture its output
          output=$(/home/runner/.cargo/bin/critcmp main_branch new_branch)

          # Print the captured output
          echo "$output"

          # Use awk to calculate percentage differences and fail the CI if the difference is more than 10%
          awk 'NR > 2 {
              group=$1
              base=$7
              changes=$3

              gsub(/[^\-0-9\.]/, "", changes)  # Extract only numerical values
              gsub(/[^\-0-9\.]/, "", base)     # Extract only numerical values

              # Ensure changes and base values are not empty
              if (changes != "" && base != "") {
                  diff = changes - base  # Calculate the absolute difference
                  percentage = (diff / base) * 100  # Calculate the percentage difference

                  if (percentage > 10) {
                      printf "Percentage change for %s exceeds 10%%: %.2f%%\n", group, percentage
                      exit 1  # Exit script to indicate CI failure
                  }
              }
          }' <<< "$output"
