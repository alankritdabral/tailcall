name: Comment Criterion

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]
  release:
    types: [published]

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Critcmp
      run: cargo install critcmp

    - name: Benchmark changes
      run: |
        cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline new_branch
        cargo bench --bench data_loader_bench -- --save-baseline new_branch
        cargo bench --bench request_template_bench -- --save-baseline new_branch
        cargo bench --bench json_like_bench -- --save-baseline new_branch

    - name: Fetch base branch
      run: git fetch

    - name: Checkout base branch
      run: git checkout ${{ github.base_ref }}

    - name: Benchmark base
      run: |
        cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline main_branch
        cargo bench --bench data_loader_bench -- --save-baseline main_branch
        cargo bench --bench request_template_bench -- --save-baseline main_branch
        cargo bench --bench json_like_bench -- --save-baseline main_branch
    - name: Comment on PR
      uses: actions/github-script@v5
      with:
          script: |
            const issue_number = context.issue.number;
            const comment = 'This is a comment from the CI pipeline';
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: comment
            });

    - name: Run shell script
      id: script
      run: |
          output=$(bash .github/scripts/degradation.sh)
          echo "::set-output name=output::$output"

    - name: Comment PR with script output
      uses: actions/github-script@v5
      with:
          script: |
            const issue_number = context.issue.number;
            const comment = `Script output: ${{ steps.script.outputs.output }}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: comment
            });
