name: Benchmark Workflow

on:
 push:
   branches:
     - main

jobs:
 benchmark:
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Install Critcmp
     run: cargo install critcmp

   - name: Benchmark changes
     run: |
       cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline changes
       cargo bench --bench data_loader_bench -- --save-baseline changes
       cargo bench --bench request_template_bench -- --save-baseline changes
       cargo bench --bench json_like_bench -- --save-baseline changes

   - name: Fetch base branch
     run: git fetch

   - name: Checkout base branch
     run: git checkout ${{ github.base_ref }}

   - name: Benchmark base
     run: |
       cargo bench --bench impl_path_string_for_evaluation_context -- --save-baseline before
       cargo bench --bench data_loader_bench -- --save-baseline before
       cargo bench --bench request_template_bench -- --save-baseline before
       cargo bench --bench json_like_bench -- --save-baseline before


   - name: Compare benchmarks
     run: critcmp base changes

   - name: Comment on issue
     uses: actions/github-script@v3
     with:
       github-token: ${{ secrets.GITHUB_TOKEN }}
       script: |
         const resultsAsMarkdown = convertToMarkdown(myOutput);
         const octokit = github.getOctokit(inputs.token);
         const contextObj = { ...context.issue };
         try {
           const { data: comment } = await octokit.rest.issues.createComment({
             owner: contextObj.owner,
             repo: contextObj.repo,
             issue_number: contextObj.number,
             body: resultsAsMarkdown,
           });
           core.info(
             `Created comment id '${comment.id}' on issue '${contextObj.number}' in '${contextObj.repo}'.`
           );
           core.setOutput("comment-id", comment.id);
         } catch (err) {
           core.warning(`Failed to comment: ${err}`);
           core.info("Commenting is not possible from forks.");
           const resultsAsObject = convertToTableObject(myOutput);
           console.table(resultsAsObject);
         }
