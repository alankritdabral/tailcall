name: Benchmark

on:
  pull_request:
    types: [opened, synchronize, labeled, reopened]
    branches:
      - main

  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run benchmark on"
        required: true
        default: "main"

jobs:
  benchmark:
    name: Macro Benchmarks
    if: contains(github.event.pull_request.labels.*.name, 'ci:benchmark')
    runs-on: benchmarking-runner
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Run Tailcall
        run: |
          ./target/release/tailcall start ci-benchmark/benchmark.graphql&

      - name: Install Nginx
        run: |
          sudo apt-get update
          sudo apt-get install -y nginx

      - name: Clean Up
        run: |
          sudo rm -rf /etc/nginx/sites-enabled/default

      - name: Copy Nginx Configuration
        working-directory: ci-benchmark
        run: |
          sudo cp nginx.conf /etc/nginx/

      - name: Test Nginx Configuration
        run: |
          sudo nginx -t

      - name: Start Nginx
        run: |
          sudo systemctl start nginx

      - name: Install Wrk
        run: |
          sudo apt-get install -y wrk

      - name: Run Test Query
        run: |
          curl -i -X POST -d '{"query": "{posts{title}}"}' http://localhost:8000/graphql -H "Content-Type: application/json"

      - id: run_wrk
        name: Run Wrk
        working-directory: ci-benchmark
        run: |
          wrk -d 30 -t 1 -c 100 -s wrk.lua http://localhost:8000/graphql > wrk-output.txt

      - id: convert_wrk_output_markdown
        name: Convert Output to Markdown
        working-directory: ci-benchmark
        run: |
          node wrk-output-to-md.js wrk-output.txt > wrk-output.md

      - id: cat_md
        name: Cat Markdown
        working-directory: ci-benchmark
        run: |
          cat wrk-output.md

      - id: get_comment_body
        name: Get Comment Body
        working-directory: ci-benchmark
        run: |
          body="$(cat wrk-output.md)"
          delimiter="$(openssl rand -hex 8)"
          echo "body<<$delimiter" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

      - name: Create Commit Comment
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{github.event.pull_request.head.sha}}
          body: ${{steps.get_comment_body.outputs.body}}

  lint:
    name: CI:Lint
    if: contains(github.event.pull_request.labels.*.name, 'ci:lint')
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install Prettier
        run: npm install --global prettier
      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/checkout@v4
      - name: Run lint script
        run: ./lint.sh --mode=fix
      - name: Commit and push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: apply lint fixes"

  Criterion_benchmarks:
    name: Performance degradation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'benchmark')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run json_like_bench
        if: contains(github.event.pull_request.labels.*.name, 'benchmark')
        uses: boa-dev/criterion-compare-action@v3.2.4
        with:
          benchName: json_like_bench
          defaultFeatures: false
          branchName: ${{ github.base_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run impl_path_string_for_evaluation_context
        if: contains(github.event.pull_request.labels.*.name, 'benchmark')
        uses: boa-dev/criterion-compare-action@v3.2.4
        with:
          benchName: impl_path_string_for_evaluation_context
          defaultFeatures: false
          branchName: ${{ github.base_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run data_loader_bench
        if: contains(github.event.pull_request.labels.*.name, 'benchmark')
        uses: boa-dev/criterion-compare-action@v3.2.4
        with:
          benchName: data_loader_bench
          defaultFeatures: false
          branchName: ${{ github.base_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run request_template_bench
        if: contains(github.event.pull_request.labels.*.name, 'benchmark')
        uses: boa-dev/criterion-compare-action@v3.2.4
        with:
          benchName: request_template_bench
          defaultFeatures: false
          branchName: ${{ github.base_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Benchmark Changes
        if: contains(github.event.pull_request.labels.*.name, 'benchmark')
        run: |
          output=$(/home/runner/.cargo/bin/critcmp base changes)
          echo "$output"
          awk 'NR > 2 {
              group=$1
              base=$7
              changes=$3
              gsub(/[^\-0-9\.]/, "", changes)
              gsub(/[^\-0-9\.]/, "", base)
              if (changes != "" && base != "") {
                  diff = changes - base
                  percentage = (diff / base) * 100
                  if (percentage > 10) {
                      printf "Percentage change for %s exceeds 10%%: %.2f%%\n", group, percentage
                      exit 1
                  }
              }
          }' <<< "$output"

  build_time_check:
    name: Build time check
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, ':benchmark')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install iai-callgrind-runner
        run: cargo install --version 0.7.3 iai-callgrind-runner

      - name: Install Valgrind
        run: |
          sudo apt-get update
          sudo apt-get install valgrind

      - name: Run Benchmarks
        run: |
          echo -n > benches/iai-callgrind/benchmarks.txt
          cargo bench --bench json_like_bench_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt
          cargo bench --bench data_loader_bench_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt
          cargo bench --bench impl_path_string_for_evaluation_context_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt
          cargo bench --bench request_template_bench_iai-callgrind -- --save-baseline change >> benches/iai-callgrind/benchmarks.txt

      - name: Manipulate Benchmark File
        run: sed -i 's/ \{1,\}\([0-9]\)/\1/g' benches/iai-callgrind/benchmarks.txt

      - name: Execute build_time_compare.sh
        run: |
          chmod +x .github/scripts/build_time_compare.sh
          ./.github/scripts/build_time_compare.sh
