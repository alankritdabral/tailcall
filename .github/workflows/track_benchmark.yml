name: Track Benchmark

on:
    push:
      branches: main
    pull_request:
      paths-ignore: ["docs/**", "**.md"]
      types: [opened, reopened, synchronize, labeled]

jobs:
    benchmark_with_bencher:
      name: Continuous Benchmarking with Bencher
      runs-on: ubuntu-latest
      env:
        BENCHER_PROJECT: tailcall
        BENCHER_TESTBED: ubuntu-latest
        BENCHER_ADAPTER: json
      steps:
        - name: Check out code
          uses: actions/checkout@v4
          with:
            ref: ${{ github.event.pull_request.head.sha }}

        - uses: bencherdev/bencher@main
        - name: Track Benchmarks with Bencher
          run: |
            git checkout feature-branch

            export FEATURE_BRANCH=feature-branch-$(git rev-parse --short HEAD)
            
            export BENCHER_API_TOKEN=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhcGlfa2V5IiwiZXhwIjo2MDA1MDIxMDgzLCJpYXQiOjE3MTAwNTM3ODgsImlzcyI6ImJlbmNoZXIuZGV2Iiwic3ViIjoiZGFicmFsYWxhbmtyaXRAZ21haWwuY29tIiwib3JnIjpudWxsfQ.NYbyDLA7aJN6535_YUjIPN1TsMbZc86qxhGKFgkXVkc
            
            git checkout main
            
            bencher run \
            --project tailcall \
            --if-branch "$FEATURE_BRANCH" \
            --else-branch \
            --testbed localhost \
            --iter 3 \
            "bencher mock"
            
            git checkout feature-branch
            
            bencher threshold create \
            --project tailcall \
            --branch "$FEATURE_BRANCH" \
            --testbed localhost \
            --measure latency \
            --test t \
            --upper-boundary 0.95
            
            bencher run \
            --project tailcall \
            --branch "$FEATURE_BRANCH" \
            --testbed localhost \
            --iter 3 \
            --fold min \
            --err \
            "bencher mock"
